@Library('Libraries@main') _
pipeline{
    //agent any
    agent {
        label 'slave-1'
    }
    //parameters {choice (choices : ['dev' , 'qa' , 'staging' , 'prod'],description : 'Choose dev or qa or staging or prod',name : 'ENV')
    environment {
        CON_NAME = 'react-con'
        IMG_NAME = 'sanjai:v1'
        REPO_NAME = 'Demo_repo'
        Env_name = 'dev'
        Version = 'latest'
    }
    stages{
        stage('Build'){
            steps{
                script{
                    sh 'sudo su'
                    //sh 'sudo docker stop ${CON_NAME}'
                    //sh 'sudo docker rm -f ${CON_NAME}'
                    //sh 'sudo docker rmi ${IMG_NAME}'
                    sh 'cd react-app ; bash build.sh'
                    //sh "cd /home/ubuntu/workspace/Sample-react-app-1/react-app ; tar -zcvf ${REPO_NAME}.tar.gz /home/ubuntu/workspace/Sample-react-app-1/react-app/node_modules/"
                    
                                   }
            }

        }
        stage('Deploy'){
            steps{
                script{
                    sh 'cd react-app ; bash deploy.sh'

                }
            }
        }
        stage ('Push to Artifactory') {
               steps {
                   script {        
                        pattern = "${REPO_NAME}.tar.gz"
                        target = "${REPO_NAME}/${Env_name}/${Version}/${REPO_NAME}.tar.gz"
                        push_to_artifactory(["$pat","$tar"])
                    }
                }
            }

    }
}
